{
  "scenarios": [
    {
      "name": "spring_ai_embedding_models",
      "success": true,
      "duration_sec": 171.795,
      "tool_calls": 21,
      "tools_used": [
        "ls",
        "bash",
        "ls",
        "grep",
        "grep",
        "grep",
        "grep",
        "grep",
        "grep",
        "ls",
        "grep",
        "bash",
        "read",
        "grep",
        "bash",
        "ls",
        "bash",
        "bash",
        "bash",
        "bash",
        "bash"
      ],
      "final_response": "Based on my comprehensive analysis of the Spring AI project, I have identified all the Embedding models used in the project. Here are the findings:\n\n## Spring AI 项目中使用的所有 Embedding 模型\n\n### 核心接口和抽象类\n- **`EmbeddingModel`** - 核心嵌入模型接口（位于 `/Users/looper/workspace/spring-ai/spring-ai-model/src/main/java/org/springframework/ai/embedding/EmbeddingModel.java`）\n- **`AbstractEmbeddingModel`** - 抽象基类\n- **`DocumentEmbeddingModel`** - 文档嵌入模型接口\n\n### 具体实现模型\n\n1. **Azure OpenAI**\n   - `AzureOpenAiEmbeddingModel` - Azure OpenAI 嵌入模型\n\n2. **AWS Bedrock**\n   - `BedrockCohereEmbeddingModel` - AWS Bedrock Cohere 嵌入模型\n   - `BedrockTitanEmbeddingModel` - AWS Bedrock Titan 嵌入模型\n\n3. **MiniMax**\n   - `MiniMaxEmbeddingModel` - MiniMax 嵌入模型\n\n4. **Mistral AI**\n   - `MistralAiEmbeddingModel` - Mistral AI 嵌入模型\n\n5. **OCI Generative AI**\n   - `OCIEmbeddingModel` - Oracle Cloud Infrastructure 生成式 AI 嵌入模型\n\n6. **Ollama**\n   - `OllamaEmbeddingModel` - Ollama 本地嵌入模型\n\n7. **OpenAI**\n   - `OpenAiEmbeddingModel` - OpenAI 嵌入模型\n\n8. **PostgresML**\n   - `PostgresMlEmbeddingModel` - PostgresML 数据库内嵌嵌入模型\n\n9. **Transformers**\n   - `TransformersEmbeddingModel` - Hugging Face Transformers 嵌入模型\n\n10. **Vertex AI**\n    - `VertexAiTextEmbeddingModel` - Google Vertex AI 文本嵌入模型\n    - `VertexAiMultimodalEmbeddingModel` - Google Vertex AI 多模态嵌入模型\n\n11. **ZhiPu AI**\n    - `ZhiPuAiEmbeddingModel` - 智谱AI 嵌入模型\n\n### 支持的嵌入模型提供商\n- OpenAI (包括 Azure OpenAI)\n- AWS Bedrock (Cohere, Titan)\n- Google Vertex AI (文本和多模态)\n- Mistral AI\n- Ollama\n- Oracle Cloud Infrastructure (OCI)\n- 智谱AI (ZhiPu AI)\n- MiniMax\n- PostgresML\n- Hugging Face Transformers\n\n### 限制说明\n- 搜索确认以下模块不包含 Embedding 模型：HuggingFace、DeepSeek、Qianfan、WatsonX-AI\n- 这些模型覆盖了主要的云提供商和本地部署选项，支持文本嵌入和多模态嵌入功能\n- 所有模型都实现了统一的 `EmbeddingModel` 接口，确保一致的 API 使用体验",
      "transcript_path": "benchmarks/logs/spring_ai_embedding_models_transcript.txt",
      "validators": [
        {
          "name": "embedding_model_set",
          "status": "pass",
          "details": {
            "missing": [],
            "extra": [],
            "matches": [
              "AzureOpenAiEmbeddingModel",
              "BedrockCohereEmbeddingModel",
              "BedrockTitanEmbeddingModel",
              "MiniMaxEmbeddingModel",
              "MistralAiEmbeddingModel",
              "OCIEmbeddingModel",
              "OllamaEmbeddingModel",
              "OpenAiEmbeddingModel",
              "PostgresMlEmbeddingModel",
              "TransformersEmbeddingModel",
              "VertexAiMultimodalEmbeddingModel",
              "VertexAiTextEmbeddingModel",
              "ZhiPuAiEmbeddingModel"
            ],
            "ignored": [
              "AbstractEmbeddingModel",
              "DocumentEmbeddingModel",
              "TitanEmbeddingModel"
            ]
          }
        },
        {
          "name": "mentions_summary",
          "status": "pass",
          "details": {
            "missing": []
          }
        }
      ]
    }
  ],
  "summary": {
    "passed": 1,
    "total": 1,
    "pass_rate": 1.0,
    "total_duration_sec": 171.795
  }
}